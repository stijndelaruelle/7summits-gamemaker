<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
m_LevelName = rm_mainMenu;
m_Direction = 1;    //Only warp if the player runs in the same direction
m_AutoWarp = true;  //If false, this is a door (player needs to press a button)

m_SpawnX = 0;       //The position the player will spawn at
m_SpawnY = 0;

//Internal
m_IsColliding = false;
m_IsTransitioning = false;
m_IsInitialized = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if we need to warp
if (!instance_exists(obj_player))
{
    exit;
}

if (place_meeting(x, y, obj_player))
{
    m_IsColliding = true;
    
    if (m_AutoWarp == true)
    {
        //Only auto fade if the player is facing the same direction
        if (obj_player.m_HorizDirection == m_Direction)
        {
            obj_player.m_HorizSpeed = 2.0;
            m_IsTransitioning = true;
        }
    }
    else if (obj_player.m_KeyAction)
    {
        m_IsTransitioning = true;
    }
}
else
{
    //Make sure the player's input is enabled again
    if (m_IsColliding &amp;&amp; !m_IsTransitioning)
    {
        m_IsColliding = false;
        m_IsTransitioning = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transition
if (m_IsTransitioning)
{
    //Nice transition
    if (!m_IsInitialized)
    {
        m_IsInitialized = true;
            
        obj_fader.m_FadeTime = 1.0;
        obj_fader.m_IsFading = true;
        obj_fader.m_IsInitialized = false;
    }
    
    //When we are halfway, change room
    else if (obj_fader.m_FadeDirection &gt; 0)
    {
        room_goto(m_LevelName);
        obj_player.x = m_SpawnX;
        obj_player.y = m_SpawnY;
        m_IsTransitioning = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
